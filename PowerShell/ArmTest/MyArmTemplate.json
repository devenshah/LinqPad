{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "resourceGroupName" : {
          "type" : "string",
          "defaultValue" : "ArmTestResourceGroup",
          "metadata": {
              "description": "The name of the resource group"
              }
      },
      "environment":{
          "type" : "string",
          "allowedValues": ["dev", "test", "preview", "staging", "live"]
      }
  },
  "variables":{       
      "webSiteName"  : "ArmTest",
      "webSiteSuffix" : "[concat('-', parameters('environment'))]",
      "webSiteFullName" : "[concat(variables('webSiteName'), )]"
  },
  "resources":[
      {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[concat('Microsoft.Insights/components/', variables('webSiteName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespace'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "AlwaysOn": true,
          "connectionStrings": [
            {
              "name": "AzureWebJobsStorage",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('WebjobsStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('WebjobsStorageAccountName')), '2015-05-01-preview').key1)]",
              "type": 3 // custom
            },
            {
              "name": "AzureWebJobsDashboard",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('WebjobsStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('WebjobsStorageAccountName')), '2015-05-01-preview').key1)]",
              "type": 3 // custom
            },
            {
              "name": "AzureWebJobsServiceBus",
              "connectionString": "[listkeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespace'), 'RootManageSharedAccessKey'), '2015-08-01').primaryConnectionString]"
            }
          ],
          "appSettings": [
            {
              "name": "sims8.integration.storage.storage-account-connection-string",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "sims8.integration.storage.setting.table-name",
              "value": "schools"
            },
            {
              "name": "capitasims.simslabs.management.servicebus.service-bus-connection-string",
              "value": "[listkeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('managementServiceBusNamespace'), 'RootManageSharedAccessKey'), '2015-08-01').primaryConnectionString]"
            },
            {
              "name": "capitasims.simslabs.management.servicebus.setting.management-school-update-topic-name",
              "value": "schoolupdate"
            },
            {
              "name": "capitasims.simslabs.management.servicebus.setting.management-school-update-subscription-name",
              "value": "sims8integration"
            },
            {
              "name": "capitasims.simslabspeople.storage.storage-account-connection-string",
              "value": ""
            },
            {
              "name": "capitasims.simslabpeople.storage.setting.blob-container-name",
              "value": "datatransfer"
            },
            {
              "name": "capitasims.simslabspeople.servicebus.service-bus-connection-string",
              "value": ""
            },
            {
              "name": "capitasims.simslabspeople.servicebus.setting.datatransfer-queue-name",
              "value": "datatransferqueue"
            },
            {
              "name": "InstrumentationKey", 
              "value": "[reference(concat('Microsoft.Insights/components/', variables('webSiteName'))).InstrumentationKey]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
          ],
          "tags": {
            "displayName": "sims8integration"
          },
          "properties": {
            "packageUri": "[concat(parameters('_artifactsLocation'), '/', parameters('sims8integrationPackageFolder'), '/', parameters('sims8integrationPackageFileName'), parameters('_artifactsLocationSasToken'))]",
            "dbType": "None",
            "connectionString": "",
            "setParameters": {
              "IIS Web Application Name": "[variables('webSiteName')]"
            }
          }
        }
      ]
    }    
  ]
}